# -----------------------------------------------------------------------------
# Build System
# -----------------------------------------------------------------------------

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

# -----------------------------------------------------------------------------
# Entry Points
# -----------------------------------------------------------------------------

[project.scripts]
mypackage = 'mypackage.__main__:main'

[project.gui_scripts]
mypackage = 'mypackage.__main__:main'

[project.entry-points."uvx.run"]
mypackage = "mypackage.__main__:main"

[project.entry-points."pipx.run"]
mypackage = "mypackage.__main__:main"

# -----------------------------------------------------------------------------
# Project
# -----------------------------------------------------------------------------

[project]
name = "mypackage"
version = "0.1.0"
readme = "README.md"
license = "Apache-2.0 OR MIT"
authors = [{ name = "Sagi Kimhi", email = "sagi.kim5@gmail.com" }]
maintainers = [{ name = "Sagi Kimhi", email = "sagi.kim5@gmail.com" }]
description = ""
dependencies = []
license-files = ["LICENSE"]
requires-python = ">=3.12"

[project.urls]
Homepage = "https://github.com/myuser/mypackage"
Issues = "https://github.com/myuser/mypackage/issues"

# -----------------------------------------------------------------------------
# Dependency Groups
# -----------------------------------------------------------------------------

[dependency-groups]
dev = [
    "pip",
    "jedi",
    "ruff",
    "wheel",
    "twine",
    "build",
    "hatch",
    "pytest",
    "jpterm",
    "debugpy",
    "notebook",
    "numpydoc",
    "graphviz",
    "hatchling",
    "nbclassic",
    "pre-commit",
    "pydocstyle",
    "pytest-cov",
    "jupyterlab",
    "pycodestyle",
    "jupyter-console",
    "networkx[default,extra]",
    "pandoc",
    "jupyter-collaboration",
    "jupyter-lsp",
    "nbconvert[webpdf]",
    "pytest-playwright",
    "jupyterlab-fasta",
    "jupyterlab-geojson",
    "jupyterlab-github",
    "jupyterlab-latex",
    "jupytext",
    "basedpyright",
    "jupyterlab-pullrequests",
    "diff-match-patch",
    "jupyter-suggestions",
    "jupyter-suggestions-rtc",
    "jlab-enhanced-launcher",
]

# -----------------------------------------------------------------------------
# Tool Configurations: UV
# -----------------------------------------------------------------------------

[tool.uv]
package = true

# -----------------------------------------------------------------------------
# Tool Configurations: Basedpyright
# -----------------------------------------------------------------------------

[tool.basedpyright]
include = ["src"]
exclude = [
    ".git",
    "dist",
    "**/.ruff_cache",
    "**/.pytest_cache",
    "**/.gitignore",
    "**/__pycache__",
    "**/*.eggs",
    "**/*.pyc",
    "**/*.pyd",
    "src/checker",
]
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "standard"
reportMissingImports = "error"
autoImportCompletions = true
useLibraryCodeForTypes = true

# -----------------------------------------------------------------------------
# Tool Configurations: Jupytext
# -----------------------------------------------------------------------------

[tool.jupytext]
formats = "ipynb,py:percent"
