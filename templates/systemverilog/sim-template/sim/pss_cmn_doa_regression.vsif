////////////////////////////////
// Speedata.io Vsif template file:
//
// pre_session_script (if defined) is executed once before the SESSION starts
// pre_group_script (if defined) is run once for EVERY GROUP. use it to compile and create the snapshot of the testbench.
// pre_run_script (if defined) is executed before EVERY RUN.
// run_script is mandatory, but can be overriden by on every lower heirarchy. (session -> group -> test)

///////////////////////////////////////////////////////////////////////////////////
// pss_cmn sanity regression session file 
// Author          : orosner
// Created         : 11 Sep 2024
// Last Modified   : 11 Sep 2024

// guard wrapper for nested sessions.
#ifndef SESSION_DEFINED

	// Session container
	//
	#define SESSION_DEFINED
	session pss_cmn_sanity_regression {
	  block : pss_cmn ; // the block name is set to attribute 'block'
	  #ifdef RUN_FROM_CURRENT
        simpath : /project/users/spdb/CURRENT/$ATTR(block)_sim/sim;
      #else
        simpath : /project/users/$ENV(USER)/$ATTR(block)_sim/sim;
      #endif
	  top_dir : /space/users/$ENV(USER)/$ATTR(block)/vmgr/ ;
	  output_mode: log_only; // [terminal ; | log_only ;]
	  drm : NC;
	  default_dispatch_parameters : "-C XC_RUN";
	};

#endif


group pss_cmn_sanity_tests {

//
// Define default or common simulation attributes for test groups
//
  linked_files : $ATTR(simpath)/pss_cmn.run;
  linked_files : $ATTR(simpath)/run_me_first.sh;
  linked_files : $ATTR(simpath)/sim_args.xcl;

    // pre-group script is used to create an image(snapshot) of the TB including DUT and VE packages.
    // following flags are considered to increase performance and/or collect statistics :
    // coven - enable coverage collection.
    // nodump - disables wave dumps
    // debug=none - disable debug flags which enable compile and run time optimizations.


#ifdef USE_TAGS
      pre_group_script: "$DIR(group)/pss_cmn.run -test_dir=$DIR(group)/model_dir -simulator=XCL -compile_only -debug=none -vmanager -nodump -logname=$DIR(group)/compile.log -coven $ATTR(compile_script_args) -sim_add_cmd='$ATTR(compile_xrun_args),$ATTR(sim_args)' -tag=$BRUN_TAGS";  
#else 
    #ifdef USE_TAGS_ONLY
          pre_group_script: "$DIR(group)/pss_cmn.run -test_dir=$DIR(group)/model_dir -simulator=XCL -compile_only -debug=none -vmanager -nodump -logname=$DIR(group)/compile.log -coven $ATTR(compile_script_args) -sim_add_cmd='$ATTR(compile_xrun_args),$ATTR(sim_args)' -tag_only -tag=$BRUN_TAGS";  
    #else 
          pre_group_script: "$DIR(group)/pss_cmn.run -test_dir=$DIR(group)/model_dir -simulator=XCL -compile_only -debug=none -vmanager -nodump -logname=$DIR(group)/compile.log -coven $ATTR(compile_script_args) -sim_add_cmd='$ATTR(compile_xrun_args),$ATTR(sim_args)'";  
    #endif
#endif
      
// Run script is run on pre-compiled, using the -run_only flag, image(snapshot) of the TB including DUT and VE packages.
// following flags are considered to increase performance and/or collect statistics :
// coven - enable coverage collection.
// nodump - disables wave dumps
// nolist - skips the list creation, which is unneccesary, as the image is pre-compiled.
// verbosity = NONE - minimize log sizes
// debug=none - disable debug flags which enable compile and run time optimizations.
    
  run_script: "$DIR(group)/pss_cmn.run -test_dir=$DIR(run) -comp_dir=$DIR(group)/model_dir -simulator= XCL -run_only -test=$ATTR(test_name) -debug=none -vmanager -nolist -nodump -logname=$ATTR(run_dir)/run.log -coven -uvm_verbosity=UVM_NONE -seed=$RUN_ENV(BRUN_SV_SEED) $ATTR(runsim_script_args) -sim_add_cmd='$ATTR(runsim_xrun_args),$ATTR(sim_args)'"; 

  // scan_script is the post-test scan filter script, to determine if test is passed or failed.
  // user-defined filter files can be added.
  // example is tc_vip.flt for filtering TrueChip License timeout tests.
  scan_script: "vm_scan.pl uvm.flt shell.flt ius_hdl.flt /project/common/vlsi/bin/tc_vip.flt";
  
  // Other default attributes values
  count : 1;          // Default run count for the group.
  timeout : 18000;    // Timeout for run in real life seconds (use 0 for no timeout) - 18000 seconds -> 5 hours.
  seed: random;       // Random seed selection 

  //
  // Simulation runs in test containers
  #include "pss_cmn_sanity_test_list.vsif"
};

// User can add additional groups, see below more deatils.
//
//    group pss_cmn_tests {
//      
//    //
//    // Define default or common simulation attributes for test group
//    //
//  linked_files : $ATTR(simpath)/pss_cmn.run;
//  linked_files : $ATTR(simpath)/run_me_first.sh;
//  linked_files : $ATTR(simpath)/sim_args.xcl;
//    // user can add different COMPILE TIME flags (e.g. +define+<DEF>) to the pre_group_script to differntiate compilation from other groups.
//    // 
//       
//  pre_group_script: "$DIR(group)/pss_cmn.run -test_dir=$DIR(group)/model_dir -simulator=XCL -compile_only -debug=none -vmanager -nodump -logname=$DIR(group)/compile.log -coven  $ATTR(compile_script_args) -sim_add_cmd='$ATTR(compile_xrun_args),$ATTR(sim_args),+define+DUMMY '";  
//    //
//    // user can add different RUN TIME flags (e.g. +) to the common run_script to differntiate compilation from other groups.
//    // 
//  run_script: "$DIR(group)/pss_cmn.run -test_dir=$DIR(run) -comp_dir=$DIR(group)/model_dir -simulator= XCL -run_only -test=$ATTR(test_name) -debug=none -vmanager -nolist -nodump -logname=$ATTR(run_dir)/run.log -coven -uvm_verbosity=UVM_NONE -seed=$RUN_ENV(BRUN_SV_SEED) $ATTR(runsim_script_args) -sim_add_cmd='$ATTR(runsim_xrun_args),$ATTR(sim_args)'"; 
//    
//      // scan_script is the post-test scan filter script, to determine if test is passed or failed.
//      // user-defined filter files can be added.
//      scan_script: "vm_scan.pl uvm.flt shell.flt ius_hdl.flt /project/common/vlsi/bin/tc_vip.flt <USER.flt>";
//      
//      // Other common group attributes values
//      count : 5;              // Default run count for each test...
//      timeout : 30000;     // Timeout for run (use 0 for no timeout)
//      seed: random;       // Random seed selection
//    
//      #include "pss_cmn_test_list.vsif"
//    };
