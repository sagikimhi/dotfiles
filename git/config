# [includeIf "gitdir:/path/to/git/dir/"]
#     path = "/path/to/git/config/file"

[gpg]
    format = ssh

[log]
    decorate = full

[init]
    defaultBranch = main

[core]
    editor = nvim
    autocrlf = false
    fsmonitor = true
    untrackedCache = true

[pull]
    rebase = true
    fastForward = only

[push]
    followTags = true

[diff]
    renames = true
    wordRegex = .
    srcPrefix = src/
    dstPrefix = dst/
    submodule = diff
    algorithm = minimal

[fetch]
    all = true
    prune = true
    pruneTags = true

[rerere]
    enabled = true
    autoUpdate = true

[rebase]
    stat = true

[commit]
    gpgsign = true

[status]
    branch = true
    renames = true
    aheadBehind = true

[color]
    ui = always
    grep = always
    diff = always
    branch = true
    status = always
    showBranch = true

[alias]
    la = "!git config -l | grep alias | cut -c 7-"  # List all aliases

    # -------------------------------------------------------------------------
    # git push aliases
    # -------------------------------------------------------------------------

    push = push --signed
    fpush = push --force-with-lease

    # -------------------------------------------------------------------------
    # git show aliases
    # -------------------------------------------------------------------------

    sshow=show -s --date=short --pretty='format:%C(red)%h %C(reset)(%s, %ad)'

    # -------------------------------------------------------------------------
    # git add aliases
    # -------------------------------------------------------------------------

    a = add
    ap = add -p
    aa = !sh -c 'git diff -U0 -w --no-color --src-prefix=a/ --dst-prefix=b/ "$@" | git apply --cached --ignore-whitespace --unidiff-zero -'

    # -------------------------------------------------------------------------
    # git checkout aliases
    # -------------------------------------------------------------------------

    co = checkout
    cob = checkout origin/main -b

    # -------------------------------------------------------------------------
    # git commit aliases
    # -------------------------------------------------------------------------

    c = commit -s --verbose
    m = commit --amend --verbose
    ca = commit -s -a --verbose
    cm = commit --verbose -s -m
    cam = commit --verbose -s -a -m

    # -------------------------------------------------------------------------
    # git diff aliases
    # -------------------------------------------------------------------------

    d = diff
    dw = diff
    ds = diff --stat
    dc = diff --cached
    dt = difftool --tool=nvim --no-symlinks --dir-diff --ignore-submodules
    mt = mergetool --tool=nvim

    # -------------------------------------------------------------------------
    # git stash aliases
    # -------------------------------------------------------------------------

    stasha = stash --all

    # -------------------------------------------------------------------------
    # git status aliases
    # -------------------------------------------------------------------------

    s = status --branch --renames --short --verbose
    sl = status --branch --renames --long --verbose
    slv = status --branch --renames --long --show-stash --verbose
    sli = status --branch --renames --long --show-stash --ignored --verbose

    # -------------------------------------------------------------------------
    # git branch aliases
    # -------------------------------------------------------------------------

    b = branch
	bb = !better-branch.sh
    bl = branch --sort='-authordate' --format='%(color:red)%(objectname:short)%20%(color:yellow)%(authordate:short)%20%(color:cyan)%(HEAD)%20%(color:reset)%(refname:short)%20%(color:green)(%(authordate:relative))'
    ba = branch --all --sort='-authordate' --format='%(color:red)%(objectname:short)%20%(color:yellow)%(authordate:short)%20%(color:cyan)%(HEAD)%20%(color:reset)%(refname:short)%20%(color:green)(%(authordate:relative))'
    br = branch --remotes --sort='-authordate' --format='%(color:red)%(objectname:short)%20%(color:yellow)%(authordate:short)%20%(color:cyan)%(HEAD)%20%(color:reset)%(refname:short)%20%(color:green)(%(authordate:relative))'

    # -------------------------------------------------------------------------
    # git log aliases
    # -------------------------------------------------------------------------

    l = log --abbrev-commit --branches --graph --pretty='format: %C(red)%h%C(reset) %C(cyan)%ad%C(reset) %s %C(blue)[%an]%C(reset)%C(yellow)%d%C(reset)' --date=iso --decorate=full
    ll = log --abbrev-commit --branches --graph --pretty='format: %C(red)%h%C(reset) %C(cyan)%ad%C(reset) %s %C(bold blue)[%an]%C(reset)%C(yellow)%d%C(reset) %n' --date=iso --decorate=full
    ls = log --abbrev-commit --branches --graph --pretty='format: %C(red)%h%C(reset) %C(cyan)%ad%C(reset) %s %C(blue)[%an]%C(reset)%C(yellow)%d%C(reset) %n' --date=iso --numstat --decorate=full

    # -------------------------------------------------------------------------
    # Branch deletion aliases - optional
    # -------------------------------------------------------------------------

    # Alias: brd
    #
    # Branch Delete.
    #
    # This checks out your local master branch and deletes all
    # local branches that have already been merged to master.
    #
    # brd = "!sh -c \"git checkout main && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\""

    # Alias: brdhere
    #
    # branch Delete Here.
    #
    # Deletes all local branches that have already been merged to the branch
    # that you're currently on.
    #
    #
    # brdhere = "!sh -c \"git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d\""

[difftool.nvim]
    cmd = "nvim -c 'Git difftool -y'"

[mergetool.nvim]
    cmd = "nvim -c 'Git mergetool'"
